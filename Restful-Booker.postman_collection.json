{
	"info": {
		"_postman_id": "fcdf93e2-660e-4876-b46d-3d99706ffdad",
		"name": "Restful-Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31249794"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set (\"id\", jsonData.bookingid)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"console.log(firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"console.log(lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\", totalPrice)\r",
							"console.log(totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\", depositPaid)\r",
							"console.log(depositPaid)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"pm.environment.set(\"checkin\", today.add(5,'d').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\", today.add(10,'d').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var additionalNeeds = pm.environment.replaceIn(\"{{$randomProductName}}\")\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)\r",
							"console.log(additionalNeeds)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstname\" : \"{{firstName}}\",\r\n\"lastname\" : \"{{lastName}}\",\r\n\"totalprice\" : {{totalPrice}},\r\n\"depositpaid\" : {{depositPaid}},\r\n\"bookingdates\" : {\r\n\"checkin\" : \"{{checkin}}\",\r\n\"checkout\" : \"{{checkout}}\"\r\n},\r\n\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Info Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    pm.test(\"First Name Validation\", function (){\r",
							"        pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Last Name Validation\", function (){\r",
							"        pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"    }) \r",
							"\r",
							"    pm.test(\"Total Price Validation\", function(){\r",
							"        var pri = parseInt(pm.environment.get(\"totalPrice\"))\r",
							"        pm.expect(jsonData.totalprice).to.eql(pri)\r",
							"    })\r",
							"\r",
							"    pm.test(\"Deposit Paid Validation\", function(){\r",
							"        var dep = jsonData.depositpaid\r",
							"        pm.expect(dep.toString()).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"CheckIn Date Validation\", function (){\r",
							"        pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"CheckOut Date Validation\", function (){\r",
							"        pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Additional Needs Validation\", function (){\r",
							"        pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"    })\r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\") \r",
							"    break;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json()\r",
							"pm.environment.set(\"access\", json.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\": \"admin\",\r\n\"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"console.log(firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"console.log(lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\", totalPrice)\r",
							"console.log(totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\", depositPaid)\r",
							"console.log(depositPaid)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"pm.environment.set(\"checkin\", today.add(5,'d').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\", today.add(10,'d').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var additionalNeeds = pm.environment.replaceIn(\"{{$randomProductName}}\")\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)\r",
							"console.log(additionalNeeds)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{access}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n\"firstname\" : \"{{firstName}}\",\r\n\"lastname\" : \"{{lastName}}\",\r\n\"totalprice\" : {{totalPrice}},\r\n\"depositpaid\" : {{depositPaid}},\r\n\"bookingdates\" : {\r\n\"checkin\" : \"{{checkin}}\",\r\n\"checkout\" : \"{{checkout}}\"\r\n},\r\n\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Info Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"if(code==200){\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    pm.test(\"First Name Validation\", function (){\r",
							"        pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Last Name Validation\", function (){\r",
							"        pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"    }) \r",
							"\r",
							"    pm.test(\"Total Price Validation\", function(){\r",
							"        var pri = parseInt(pm.environment.get(\"totalPrice\"))\r",
							"    pm.expect(jsonData.totalprice).to.eql(pri)\r",
							"    })\r",
							"\r",
							"    /**pm.test(\"Deposit Paid Validation\", function(){\r",
							"        pm.expect(jsonData.depositpaid.toString()).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"    })**/\r",
							"\r",
							"    pm.test(\"Deposit Paid Validation\", function(){\r",
							"        var dep = jsonData.depositpaid\r",
							"        pm.expect(dep.toString()).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"CheckIn Date Validation\", function (){\r",
							"        pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"CheckOut Date Validation\", function (){\r",
							"        pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Additional Needs Validation\", function (){\r",
							"        pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"    })\r",
							"}else if(code==404){\r",
							"    pm.test(\"Not Found\")\r",
							" }else if(code==500){\r",
							"    pm.test(\"Internal Server Error\")\r",
							" }else if(code==401||code==403){\r",
							"     pm.test(\"Unauthorize or Forbidden\")\r",
							" }else{\r",
							"     pm.test(\".......\")\r",
							" }\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{access}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Info Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}